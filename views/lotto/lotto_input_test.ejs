<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üçÄ AI Î°úÎòêÎ≤àÌò∏ Î∂ÑÏÑù</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #ffeaa7 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .container {
            max-width: 600px;
            width: 100%;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(15px);
            border-radius: 25px;
            box-shadow: 0 30px 60px rgba(0, 0, 0, 0.2);
            overflow: hidden;
            position: relative;
        }

        .header {
            background: linear-gradient(135deg, #ff6b6b, #ee5a24);
            color: white;
            padding: 40px 30px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .header::before {
            content: 'üçÄ‚ú®üé±üîÆ‚≠ê';
            position: absolute;
            top: 20px;
            right: 20px;
            font-size: 1.5em;
            opacity: 0.3;
            animation: float 3s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }

        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        .header p {
            font-size: 1.1em;
            opacity: 0.9;
            margin-bottom: 0;
        }

        .form-container {
            padding: 40px 30px;
            background: white;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 25px;
        }

        .form-group {
            position: relative;
            margin-bottom: 25px;
        }

        .form-group.full-width {
            grid-column: 1 / -1;
        }

        .form-input, .form-select {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid #e9ecef;
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.8);
            color: #333;
        }

        .form-input:focus, .form-select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }

        .form-input::placeholder {
            color: #adb5bd;
            transition: opacity 0.3s ease;
        }

        .form-input:focus::placeholder {
            opacity: 0;
        }

        .form-label {
            position: absolute;
            top: -8px;
            left: 15px;
            background: white;
            padding: 0 8px;
            font-size: 12px;
            font-weight: 600;
            color: #667eea;
            opacity: 0;
            transform: translateY(10px);
            transition: all 0.3s ease;
        }

        .form-input:focus + .form-label,
        .form-input:not(:placeholder-shown) + .form-label {
            opacity: 1;
            transform: translateY(0);
        }

        .dream-group {
            position: relative;
        }

        .dream-textarea {
            width: 100%;
            padding: 20px;
            border: 2px solid #e9ecef;
            border-radius: 12px;
            font-size: 16px;
            min-height: 120px;
            resize: vertical;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.8);
            font-family: inherit;
            line-height: 1.6;
        }

        .dream-textarea:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .dream-label {
            position: absolute;
            top: -8px;
            left: 15px;
            background: white;
            padding: 0 8px;
            font-size: 12px;
            font-weight: 600;
            color: #667eea;
        }

        .analyze-button {
            width: 100%;
            padding: 18px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            border-radius: 15px;
            font-size: 18px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            margin-top: 20px;
        }

        .analyze-button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .analyze-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 30px rgba(102, 126, 234, 0.4);
        }

        .analyze-button:hover::before {
            left: 100%;
        }

        .analyze-button:active {
            transform: translateY(-1px);
        }

        .loading {
            pointer-events: none;
            opacity: 0.7;
        }

        .loading::after {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            margin: auto;
            border: 2px solid transparent;
            border-top-color: #ffffff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        @keyframes spin {
            0% { transform: translate(-50%, -50%) rotate(0deg); }
            100% { transform: translate(-50%, -50%) rotate(360deg); }
        }

        .result-container {
            margin-top: 30px;
            background: linear-gradient(135deg, #f8f9ff, #e3f2fd);
            border-radius: 15px;
            padding: 25px;
            border-left: 5px solid #667eea;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
            display: none;
            animation: slideUp 0.5s ease;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .result-title {
            font-size: 18px;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .result-content {
            background: white;
            padding: 20px;
            border-radius: 10px;
            font-family: 'Courier New', monospace;
            font-size: 14px;
            line-height: 1.6;
            max-height: 400px;
            overflow-y: auto;
            white-space: pre-wrap;
            word-wrap: break-word;
            box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .error {
            background: linear-gradient(135deg, #ffe8e8, #ffcdd2);
            border-left-color: #f44336;
        }

        .birth-info {
            display: grid;
            grid-template-columns: 2fr 1fr 1fr 1fr 1fr;
            gap: 15px;
        }

        .icon {
            font-size: 1.2em;
            margin-right: 5px;
        }

        @media (max-width: 768px) {
            .container {
                margin: 10px;
                border-radius: 20px;
            }

            .header {
                padding: 30px 20px;
            }

            .header h1 {
                font-size: 2em;
            }

            .form-container {
                padding: 30px 20px;
            }

            .form-grid {
                grid-template-columns: 1fr;
                gap: 15px;
            }

            .birth-info {
                grid-template-columns: 1fr;
            }

            .analyze-button {
                font-size: 16px;
                padding: 15px;
            }
        }

        .tip {
            background: linear-gradient(135deg, #fff3cd, #ffeeba);
            border: 1px solid #ffeaa7;
            border-radius: 10px;
            padding: 15px;
            margin-top: 20px;
            font-size: 14px;
            color: #856404;
        }

        .tip-icon {
            color: #f39c12;
            margin-right: 8px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üçÄ AI Î°úÎòêÎ≤àÌò∏ Î∂ÑÏÑù</h1>
            <p>ÍøàÍ≥º Ïö¥ÏÑ∏Î•º ÌÜµÌïú Í∞úÏù∏ ÎßûÏ∂§Ìòï Î°úÎòê Î≤àÌò∏ Î∂ÑÏÑù</p>
        </div>

        <div class="form-container">
            <form id="lottoForm">
                <div class="form-group">
                    <input type="text" id="name" class="form-input" placeholder="Ïù¥Î¶ÑÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî" required>
                    <label class="form-label">üë§ Ïù¥Î¶Ñ</label>
                </div>

                <div class="form-grid">
                    <div class="form-group">
                        <select id="gender" class="form-select" required>
                            <option value="">ÏÑ±Î≥Ñ ÏÑ†ÌÉù</option>
                            <option value="ÎÇ®ÏÑ±">üë® ÎÇ®ÏÑ±</option>
                            <option value="Ïó¨ÏÑ±">üë© Ïó¨ÏÑ±</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <select id="calendar" class="form-select" required>
                            <option value="">Îã¨Î†• ÏÑ†ÌÉù</option>
                            <option value="ÏñëÎ†•">‚òÄÔ∏è ÏñëÎ†•</option>
                            <option value="ÏùåÎ†•">üåô ÏùåÎ†•</option>
                        </select>
                    </div>
                </div>

                <div class="birth-info">
                    <div class="form-group">
                        <input type="number" id="year" class="form-input" placeholder="Ï∂úÏÉùÎÖÑÎèÑ (Ïòà: 1990)" min="1900" max="2024" required>
                        <label class="form-label">üìÖ Ï∂úÏÉùÎÖÑÎèÑ</label>
                    </div>
                    <div class="form-group">
                        <input type="number" id="month" class="form-input" placeholder="Ïõî" min="1" max="12" required>
                        <label class="form-label">Ïõî</label>
                    </div>
                    <div class="form-group">
                        <input type="number" id="day" class="form-input" placeholder="Ïùº" min="1" max="31" required>
                        <label class="form-label">Ïùº</label>
                    </div>
                </div>

                <div class="form-group full-width dream-group">
                    <textarea id="dream" class="dream-textarea" placeholder="Ïò§Îäò Íæº ÍøàÏù¥ÎÇò ÏµúÍ∑º Ïù∏ÏÉÅ ÍπäÏóàÎçò ÍøàÏùÑ ÏûêÏÑ∏Ìûà Ï†ÅÏñ¥Ï£ºÏÑ∏Ïöî. ÍøàÏùò ÎÇ¥Ïö©Ïù¥ ÏÉÅÏÑ∏Ìï†ÏàòÎ°ù Îçî Ï†ïÌôïÌïú Î∂ÑÏÑùÏù¥ Í∞ÄÎä•Ìï©ÎãàÎã§." required></textarea>
                    <label class="dream-label">üåô Íøà ÎÇ¥Ïö©</label>
                </div>

                <button type="submit" class="analyze-button" id="analyzeBtn">
                    <span class="icon">üîÆ</span> AI Î∂ÑÏÑù ÏãúÏûëÌïòÍ∏∞
                </button>

                <div class="tip">
                    <span class="tip-icon">üí°</span>
                    <strong>Î∂ÑÏÑù ÌåÅ:</strong> ÍøàÏùò ÏÉâÍπî, Í∞êÏ†ï, Îì±Ïû•Ïù∏Î¨º, Ïû•ÏÜå Îì±ÏùÑ Íµ¨Ï≤¥Ï†ÅÏúºÎ°ú Í∏∞Î°ùÌïòÎ©¥ ÎçîÏö± Ï†ïÌôïÌïú Ïö¥ÏÑ∏ Î∂ÑÏÑùÏù¥ Í∞ÄÎä•Ìï©ÎãàÎã§.
                </div>
            </form>

            <div class="result-container" id="resultContainer">
                <div class="result-title">
                    <span class="icon">üìä</span> Î∂ÑÏÑù Í≤∞Í≥º
                </div>
                <div class="result-content" id="result"></div>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('lottoForm').addEventListener('submit', function(e) {
            e.preventDefault();
            sendData();
        });

        function sendData() {
            const button = document.getElementById('analyzeBtn');
            const resultContainer = document.getElementById('resultContainer');
            const result = document.getElementById('result');

            // Î≤ÑÌäº Î°úÎî© ÏÉÅÌÉú
            button.classList.add('loading');
            button.innerHTML = 'Î∂ÑÏÑù Ï§ë...';
            
            // Í≤∞Í≥º Ïª®ÌÖåÏù¥ÎÑà Ïà®Í∏∞Í∏∞
            resultContainer.style.display = 'none';

            let data = {
                name: document.getElementById("name").value.trim(),
                gender: document.getElementById("gender").value.trim(),
                year: document.getElementById("year").value.trim(),
                month: document.getElementById("month").value.trim(),
                day: document.getElementById("day").value.trim(),
                calendar: document.getElementById("calendar").value.trim(),
                dream: document.getElementById("dream").value.trim()
            };

            // Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
            if (!data.name || !data.gender || !data.year || !data.month || !data.day || !data.calendar || !data.dream) {
                showError('Î™®Îì† ÌïÑÎìúÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
                resetButton();
                return;
            }

            fetch("/lotto/analysis", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data)
            })
            .then(res => {
                if (!res.ok) {
                    throw new Error(`HTTP error! status: ${res.status}`);
                }
                return res.json();
            })
            .then(data => {
                showResult(JSON.stringify(data, null, 2));
                resetButton();
            })
            .catch(err => {
                showError('ÏÑúÎ≤Ñ Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§. Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.');
                console.error('Error:', err);
                resetButton();
            });
        }

        function showResult(data) {
            const resultContainer = document.getElementById('resultContainer');
            const result = document.getElementById('result');
            
            result.textContent = data;
            resultContainer.className = 'result-container';
            resultContainer.style.display = 'block';
            
            // Í≤∞Í≥ºÎ°ú Ïä§ÌÅ¨Î°§
            resultContainer.scrollIntoView({ behavior: 'smooth' });
        }

        function showError(message) {
            const resultContainer = document.getElementById('resultContainer');
            const result = document.getElementById('result');
            
            result.textContent = message;
            resultContainer.className = 'result-container error';
            resultContainer.style.display = 'block';
        }

        function resetButton() {
            const button = document.getElementById('analyzeBtn');
            button.classList.remove('loading');
            button.innerHTML = '<span class="icon">üîÆ</span> AI Î∂ÑÏÑù ÏãúÏûëÌïòÍ∏∞';
        }

        // ÏûÖÎ†• ÌïÑÎìú Ïï†ÎãàÎ©îÏù¥ÏÖò
        document.querySelectorAll('.form-input').forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.style.transform = 'scale(1.02)';
            });
            
            input.addEventListener('blur', function() {
                this.parentElement.style.transform = 'scale(1)';
            });
        });

        // Ïã§ÏãúÍ∞Ñ ÏûÖÎ†• Í∏∏Ïù¥ Ï≤¥ÌÅ¨ (Íøà ÎÇ¥Ïö©)
        document.getElementById('dream').addEventListener('input', function() {
            const length = this.value.length;
            const minLength = 10;
            
            if (length < minLength) {
                this.style.borderColor = '#ffc107';
            } else {
                this.style.borderColor = '#28a745';
            }
        });
    </script>
</body>
</html>