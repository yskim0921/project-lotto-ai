<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8" />
    <title>후기 상세 페이지</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/5/w3.css">
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .comment-area {
            margin-top: 3rem;
            padding-top: 1rem;
            border-top: 1px solid #eee;
        }
        .comment-list {
            list-style: none;
            padding: 0;
        }
        .comment-item {
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 0.375rem;
            padding: 1rem;
            margin-bottom: 0.75rem;
        }
        .comment-meta {
            font-size: 0.875rem;
            color: #6c757d;
            margin-bottom: 0.5rem;
        }
        .comment-content {
            white-space: pre-wrap; /* 줄바꿈 유지 */
        }
        /* 이미지 스타일 */
        .card-img-top {
            max-width: 100%;
            height: auto; /* 원본 비율 유지 */
            object-fit: contain; /* 이미지가 잘리지 않도록 컨테이너에 맞춤 */
            border-radius: 0.375rem;
            margin-bottom: 1rem;
        }
    </style>
</head>

<body>
    <!-- 상단 include -->
    <%- include('../ins/top') %>

    <div class="container w-75 mt-5 mx-auto">
        <div class="d-flex justify-content-between align-items-center">
            <h2 class="m-0">후기 상세 내용</h2>
            <div>
                <a class="btn btn-outline-secondary" href="/product">목록 보기</a>
            </div>
        </div>
        <hr />
        <div class="card w-75 mx-auto p-3">
            <% if (filename) { %>
            <!-- 상세 페이지에서는 이미지가 잘리지 않고 전체 보이도록 object-fit: contain 사용 -->
            <img class="card-img-top" src="/upload/<%= filename %>" alt="후기 이미지" />
            <% } else { %>
            <div class="text-muted">업로드된 이미지가 없습니다.</div>
            <% } %>

            <div class="card-body">
                <p class="card-text">제목: <b><%= name %></b></p>
                <p class="card-text">당첨금: ₩ <b><%= price.toLocaleString() %></b></p>
                <p class="card-text">후기내용: <br> <%= content %></p>
            </div>
        </div>
        <hr />
        <div class="d-flex gap-2 mb-5">
            <a class="btn btn-outline-secondary" href="/product">&laquo; 목록</a>
            <a class="btn btn-outline-secondary" href="javascript:history.back()">이전</a>
        </div>

        <!-- 📌 댓글 영역 시작 -->
        <div class="comment-area">
            <h3>댓글</h3>
            <div class="mb-3">
                <label for="commentAuthor" class="form-label visually-hidden">작성자</label>
                <input type="text" class="form-control mb-2" id="commentAuthor" placeholder="작성자" required>
                <label for="commentContent" class="form-label visually-hidden">댓글 내용</label>
                <textarea class="form-control" id="commentContent" rows="3" placeholder="댓글을 입력하세요..." required></textarea>
                <button class="btn btn-primary mt-2" onclick="submitComment()">댓글 등록</button>
            </div>

            <h4>모든 댓글 (<span id="commentCount">0</span>)</h4>
            <ul id="commentList" class="comment-list">
                <!-- 댓글이 여기에 동적으로 로드됩니다 -->
                <li class="text-muted text-center" id="noCommentsMessage">댓글이 없습니다. 첫 댓글을 남겨주세요!</li>
            </ul>
        </div>
        <!-- 📌 댓글 영역 끝 -->

    </div>

    <!-- bottom include -->
    <%- include('../ins/bottom') %>

    <script>
        const reviewId = "<%= _id %>"; // 현재 후기의 ID를 JavaScript 변수에 저장

        // 페이지 로드 시 댓글을 가져오는 함수
        async function fetchComments() {
            try {
                const response = await fetch(`/product/${reviewId}/comments`);
                if (response.ok) {
                    const comments = await response.json();
                    renderComments(comments);
                } else {
                    console.error('댓글을 불러오지 못했습니다.');
                }
            } catch (error) {
                console.error('댓글 불러오기 중 오류 발생:', error);
            }
        }

        // 댓글을 화면에 렌더링하는 함수
        function renderComments(comments) {
            const commentList = document.getElementById('commentList');
            commentList.innerHTML = ''; // 기존 댓글 비우기
            const commentCountSpan = document.getElementById('commentCount');
            
            if (comments.length === 0) {
                commentList.innerHTML = '<li class="text-muted text-center" id="noCommentsMessage">댓글이 없습니다. 첫 댓글을 남겨주세요!</li>';
                commentCountSpan.textContent = '0';
                return;
            }

            comments.forEach(comment => {
                const li = document.createElement('li');
                li.className = 'comment-item';
                li.innerHTML = `
                    <div class="comment-meta">
                        <strong>${escapeHTML(comment.author)}</strong> - 
                        ${new Date(comment.createdAt).toLocaleString()}
                        <button class="btn btn-danger btn-sm float-end" onclick="deleteComment('${comment._id}')">삭제</button>
                    </div>
                    <p class="comment-content">${escapeHTML(comment.content)}</p>
                `;
                commentList.appendChild(li);
            });
            commentCountSpan.textContent = comments.length;
        }

        // 댓글 등록 함수
        async function submitComment() {
            const authorInput = document.getElementById('commentAuthor');
            const contentInput = document.getElementById('commentContent');

            const author = authorInput.value.trim();
            const content = contentInput.value.trim();

            if (!author || !content) {
                alert('작성자와 댓글 내용을 모두 입력해주세요.');
                return;
            }

            try {
                const response = await fetch(`/product/${reviewId}/comments`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ author, content })
                });

                if (response.ok) {
                    authorInput.value = ''; // 입력 필드 초기화
                    contentInput.value = '';
                    fetchComments(); // 댓글 다시 불러오기
                } else {
                    const errorData = await response.json();
                    alert('댓글 등록 실패: ' + (errorData.message || '알 수 없는 오류'));
                }
            } catch (error) {
                console.error('댓글 등록 중 오류 발생:', error);
                alert('네트워크 오류 또는 서버 문제로 댓글 등록에 실패했습니다.');
            }
        }

        // 댓글 삭제 함수
        async function deleteComment(commentId) {
            if (confirm('정말로 이 댓글을 삭제하시겠습니까?')) {
                try {
                    const response = await fetch(`/product/${reviewId}/comments/${commentId}`, {
                        method: 'DELETE',
                    });

                    if (response.ok) {
                        fetchComments(); // 댓글 목록 새로고침
                    } else {
                        const errorData = await response.json();
                        alert('댓글 삭제 실패: ' + (errorData.message || '알 수 없는 오류'));
                    }
                } catch (error) {
                    console.error('댓글 삭제 중 오류 발생:', error);
                    alert('네트워크 오류 또는 서버 문제로 댓글 삭제에 실패했습니다.');
                }
            }
        }

        // HTML 이스케이프 함수 (보안을 위해 사용자 입력 내용 표시 전 사용)
        function escapeHTML(str) {
            const div = document.createElement('div');
            div.appendChild(document.createTextNode(str));
            return div.innerHTML;
        }

        // 페이지 로드 시 댓글 불러오기
        document.addEventListener('DOMContentLoaded', fetchComments);
    </script>
</body>

</html>
